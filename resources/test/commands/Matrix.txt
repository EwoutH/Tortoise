Matrix_creation
  extensions [matrix]
  globals [glob1 glob2 glob3 glob4]
  O> set glob1 matrix:make-constant 2 2 0
  (word glob1) => "{{matrix:  [ [ 0 0 ][ 0 0 ] ]}}"
  O> set glob2 matrix:make-identity 3
  (word glob2) => "{{matrix:  [ [ 1 0 0 ][ 0 1 0 ][ 0 0 1 ] ]}}"

Matrix_conversion-from-list
  extensions [matrix]
  globals [glob1 glob2 glob3]
  O> set glob1 matrix:from-row-list [[1 2 3] [4 5 6]]
  (word glob1) => "{{matrix:  [ [ 1 2 3 ][ 4 5 6 ] ]}}"
  O> set glob2 matrix:from-row-list [[1 2 3] [4 5 "6"]]
  (word glob2) => "{{matrix:  [ [ 1 2 3 ][ 4 5 0 ] ]}}"
  O> set glob3 matrix:from-row-list [] => ERROR Extension exception: input list was empty
  O> set glob3 matrix:from-row-list [[]] => ERROR Extension exception: input list contained only empty lists
  O> set glob3 matrix:from-row-list [1 2 3] => ERROR Extension exception: To convert a nested list into a matrix, there must be exactly two levels of nesting -- e.g. [[1 2 3] [4 5 6]] creates a good 2x3 matrix.
  O> set glob3 matrix:from-row-list [[1 2 3] [4 5]] => ERROR Extension exception: To convert a nested list into a matrix, all nested lists must be the same length -- e.g. [[1 2 3 4] [1 2 3]] is invalid, because row 1 has one more entry.
  O> set glob1 matrix:from-column-list [[1 2 3] [4 5 6]]
  (word glob1) => "{{matrix:  [ [ 1 4 ][ 2 5 ][ 3 6 ] ]}}"
  O> set glob2 matrix:from-column-list [[1 2 3] [4 5 "6"]]
  (word glob2) => "{{matrix:  [ [ 1 4 ][ 2 5 ][ 3 0 ] ]}}"
  O> set glob3 matrix:from-column-list [] => ERROR Extension exception: input list was empty
  O> set glob3 matrix:from-column-list [[]] => ERROR Extension exception: input list contained only empty lists
  O> set glob3 matrix:from-column-list [1 2 3] => ERROR Extension exception: To convert a nested list into a matrix, there must be exactly two levels of nesting -- e.g. [[1 2 3] [4 5 6]] creates a good 2x3 matrix.
  O> set glob3 matrix:from-column-list [[1 2 3] [4 5]] => ERROR Extension exception: To convert a nested list into a matrix, all nested lists must be the same length -- e.g. [[1 2 3 4] [1 2 3]] is invalid, because row 1 has one more entry.

Matrix_to-row/column-list
  extensions [matrix]
  globals [glob1 glob2 glob3]
  O> set glob1 matrix:from-row-list [[1 2 3] [4 5 6]]
  matrix:to-row-list glob1 => [[1 2 3] [4 5 6]]
  matrix:to-column-list glob1 => [[1 4] [2 5] [3 6]]


Matrix_copy
  extensions [matrix]
  globals [glob1 glob-copy]
  O> set glob1 matrix:make-identity 3
  O> set glob-copy matrix:copy glob1
  (word glob-copy) => "{{matrix:  [ [ 1 0 0 ][ 0 1 0 ][ 0 0 1 ] ]}}"
  O> matrix:set glob1 0 0 3
  (word glob1) => "{{matrix:  [ [ 3 0 0 ][ 0 1 0 ][ 0 0 1 ] ]}}"
  (word glob-copy) => "{{matrix:  [ [ 1 0 0 ][ 0 1 0 ][ 0 0 1 ] ]}}"

Matrix_pretty-print
  extensions [matrix]
  globals [glob1]
  O> set glob1 matrix:from-row-list [[1 2 3] [4 5 6]]
  matrix:pretty-print-text glob1 => "[[ 1  2  3 ]\n [ 4  5  6 ]]"
  (word glob1) => "{{matrix:  [ [ 1 2 3 ][ 4 5 6 ] ]}}"

Matrix_get/set
  extensions [matrix]
  globals [glob1 glob2 glob3 glob4 glob5]
  O> set glob1 matrix:from-row-list [[1 2 3] [4 5 6]]
  O> set glob2 matrix:from-row-list [[1 2 3] [4 5 6]]
  O> set glob3 matrix:from-row-list [[1 2 3] [4 5 6]]
  O> set glob4 matrix:from-row-list [[1 2 3] [4 5 6]]
  O> set glob5 matrix:from-row-list [[1 2 3] [4 5 6]]
  matrix:get glob1 1 2 => 6
  matrix:get glob1 9 9 => ERROR Extension exception: Error: index out of bounds while observer running MATRIX:GET
  matrix:get-row glob1 0 => [1 2 3]
  matrix:get-row glob1 9 => ERROR Extension exception: Error: index out of bounds while observer running MATRIX:GET-ROW
  matrix:get-column glob1 0 => [1 4]
  matrix:get-column glob1 9 => ERROR Extension exception: Error: index out of bounds while observer running MATRIX:GET-COLUMN
  O> matrix:set glob1 1 2 10
  (word glob1) => "{{matrix:  [ [ 1 2 3 ][ 4 5 10 ] ]}}"
  O> matrix:set glob1 10 2 10 => ERROR Extension exception: Error: index out of bounds while observer running MATRIX:SET
  O> matrix:set-row glob2 0 [2 3 4]
  (word glob2) => "{{matrix:  [ [ 2 3 4 ][ 4 5 6 ] ]}}"
  O> matrix:set-row glob2 10 [2 3 4] => ERROR Extension exception: Error: index out of bounds while observer running MATRIX:SET-ROW
  O> matrix:set-column glob3 0 [0 0]
  (word glob3) => "{{matrix:  [ [ 0 2 3 ][ 0 5 6 ] ]}}"
  O> matrix:set-column glob3 10 [0 0] => ERROR Extension exception: Error: index out of bounds while observer running MATRIX:SET-COLUMN

Matrix_swap-rows/swap-colums
  extensions [matrix]
  globals [glob1 glob2]
  O> set glob1 matrix:from-row-list [[1 2 3] [4 5 6]]
  O> set glob2 matrix:from-row-list [[1 2 3] [4 5 6]]
  O> matrix:swap-rows glob1 0 1
  (word glob1) => "{{matrix:  [ [ 4 5 6 ][ 1 2 3 ] ]}}"
  O> matrix:swap-rows glob1 10 1 => ERROR Extension exception: Error: index out of bounds while observer running MATRIX:SWAP-ROWS
  O> matrix:swap-columns glob2 0 1
  (word glob2) => "{{matrix:  [ [ 2 1 3 ][ 5 4 6 ] ]}}"
  O> matrix:swap-columns glob2 10 1 => ERROR Extension exception: Error: index out of bounds while observer running MATRIX:SWAP-COLUMNS

Matrix_set-and-report
  extensions [matrix]
  globals [glob1 glob2]
  O> set glob1 matrix:from-row-list [[1 2 3] [4 5 6]]
  O> set glob2 matrix:set-and-report glob1 0 0 9
  (word glob1) => "{{matrix:  [ [ 1 2 3 ][ 4 5 6 ] ]}}"
  (word glob2) => "{{matrix:  [ [ 9 2 3 ][ 4 5 6 ] ]}}"
  O> set glob2 matrix:set-and-report glob1 10 0 9 => ERROR Extension exception: Error: index out of bounds while observer running MATRIX:SET-AND-REPORT

Matrix_dimensions
  extensions [matrix]
  matrix:dimensions matrix:from-row-list [[1 2 3] [4 5 6]] => [2 3]

Matrix_submatrix
  extensions [matrix]
  globals [glob1]
  O> set glob1 matrix:from-row-list [[0 1 2 3 4] [5 6 7 8 9]]
  (word (matrix:submatrix glob1 0 0 2 2)) => "{{matrix:  [ [ 0 1 ][ 5 6 ] ]}}"

Matrix_matrix-is-matrix
  extensions [ matrix ]
  matrix:is-matrix? 0 => false
  matrix:is-matrix? "hi" => false
  matrix:is-matrix? [[1 2 3][4 5 6]] => false
  matrix:is-matrix? matrix:make-identity 3 => true

Matrix_matrix-times-scalar
  extensions [ matrix ]
  globals [glob1]
  O> set glob1 matrix:from-row-list [[1 2 3] [4 5 6]]
  (word matrix:times-scalar glob1 -1) => "{{matrix:  [ [ -1 -2 -3 ][ -4 -5 -6 ] ]}}"
  (word glob1) => "{{matrix:  [ [ 1 2 3 ][ 4 5 6 ] ]}}"

Matrix_matrix-times
  extensions [ matrix ]
  globals [glob1 glob2 glob3 glob4 glob5]
  O> set glob1 matrix:from-row-list [[1 2 3] [4 5 6] [7 8 9]]
  (word (matrix:times 2 glob1 glob1)) => "{{matrix:  [ [ 60 72 84 ][ 132 162 192 ][ 204 252 300 ] ]}}"
  (word (matrix:times 2 glob1 glob1)) => "{{matrix:  [ [ 60 72 84 ][ 132 162 192 ][ 204 252 300 ] ]}}"
  (word (matrix:times matrix:make-identity 1 2 3)) => "{{matrix:  [ [ 6 ] ]}}"
  O> set glob2 matrix:from-row-list [[ 6 ]]
  (word (list matrix:times glob2 glob2 glob2)) => "[{{matrix:  [ [ 36 ] ]}} {{matrix:  [ [ 6 ] ]}}]"
  (word (2 matrix:* glob1 matrix:* glob1)) => "{{matrix:  [ [ 60 72 84 ][ 132 162 192 ][ 204 252 300 ] ]}}"
  O> set glob3 matrix:from-row-list [[1 2 3] [4 5 6]]
  O> set glob4 matrix:make-identity 3
  (word matrix:times glob3 glob4) => "{{matrix:  [ [ 1 2 3 ][ 4 5 6 ] ]}}"
  O> set glob5 (matrix:set-and-report glob4 1 1 -1)
  (word matrix:times glob3 glob5) => "{{matrix:  [ [ 1 -2 3 ][ 4 -5 6 ] ]}}"

Matrix_matrix-plus
  extensions [ matrix ]
  globals [glob1]
  O> set glob1 matrix:from-row-list [[1 2 3] [4 5 6] [7 8 9]]
  (word (matrix:plus 1 glob1 glob1 glob1)) => "{{matrix:  [ [ 4 7 10 ][ 13 16 19 ][ 22 25 28 ] ]}}"
  (word (matrix:plus glob1 glob1 glob1)) => "{{matrix:  [ [ 3 6 9 ][ 12 15 18 ][ 21 24 27 ] ]}}"
  (word (matrix:plus glob1 glob1 glob1)) => "{{matrix:  [ [ 3 6 9 ][ 12 15 18 ][ 21 24 27 ] ]}}"
  (word (glob1 matrix:+ glob1 matrix:+ glob1)) => "{{matrix:  [ [ 3 6 9 ][ 12 15 18 ][ 21 24 27 ] ]}}"

Matrix_matrix-minus
  extensions [ matrix ]
  globals [glob1]
  O> set glob1 matrix:from-row-list [[1 2 3] [4 5 6] [7 8 9]]
  (word matrix:minus glob1 glob1) => "{{matrix:  [ [ 0 0 0 ][ 0 0 0 ][ 0 0 0 ] ]}}"
  (word matrix:minus glob1 1) => "{{matrix:  [ [ 0 1 2 ][ 3 4 5 ][ 6 7 8 ] ]}}"
  (word matrix:minus 1 glob1) => "{{matrix:  [ [ 0 -1 -2 ][ -3 -4 -5 ][ -6 -7 -8 ] ]}}"
  (word (matrix:minus glob1 glob1 glob1)) => "{{matrix:  [ [ -1 -2 -3 ][ -4 -5 -6 ][ -7 -8 -9 ] ]}}"
  (word (glob1 matrix:- glob1 matrix:- glob1)) => "{{matrix:  [ [ -1 -2 -3 ][ -4 -5 -6 ][ -7 -8 -9 ] ]}}"

Matrix_inverse
  extensions [matrix]
  globals [glob1 glob2]
  O> set glob1 matrix:from-row-list [[1 2] [1 1]]
  O> set glob2 matrix:inverse glob1
  (word glob2) => "{{matrix:  [ [ -1 2 ][ 1 -1 ] ]}}"

Matrix_transpose
  extensions [matrix]
  globals [glob1 glob2]
  O> set glob1 matrix:from-row-list [[1 2] [3 4]]
  O> set glob2 matrix:transpose glob1
  (word glob2) => "{{matrix:  [ [ 1 3 ][ 2 4 ] ]}}"
  (word glob1) => "{{matrix:  [ [ 1 2 ][ 3 4 ] ]}}"

Matrix_det/rank/trace/solve
  extensions [matrix]
  globals [glob1 glob2 glob3 glob4]
  O> set glob1 matrix:from-row-list [[1 0 0] [0 2 0] [0 0 3]]
  (word (matrix:det glob1)) => "6"
  (word glob1) => "{{matrix:  [ [ 1 0 0 ][ 0 2 0 ][ 0 0 3 ] ]}}"
  O> set glob2 matrix:make-constant 2 3 0
  (word glob2) => "{{matrix:  [ [ 0 0 0 ][ 0 0 0 ] ]}}"
  (word (matrix:rank glob2)) => "0"
  (word (matrix:rank glob1)) => "3"
  O> set glob3 matrix:from-row-list [[1 3 5] [2 4 7] [1 1 0]]
  O> set glob4 matrix:from-row-list [[1] [3] [5]]
  (word (matrix:solve glob3 glob4)) => "{{matrix:  [ [ 3.25 ][ 1.75 ][ -1.5 ] ]}}"

Matrix_matrix:precedence
  extensions [ matrix ]
  globals [glob1]
  O> set glob1 matrix:from-row-list [[1 2 3] [4 5 6] [7 8 9]]
  (word (glob1 matrix:+ 2 matrix:* glob1)) => "{{matrix:  [ [ 3 6 9 ][ 12 15 18 ][ 21 24 27 ] ]}}"

Matrix_matrix-times-element-wise
  extensions [ matrix ]
  globals [glob1 glob2]
  O> set glob1 matrix:from-row-list [[1 2 3] [1 2 3]]
  (word (matrix:times-element-wise glob1 glob1 glob1)) => "{{matrix:  [ [ 1 8 27 ][ 1 8 27 ] ]}}"
  O> set glob2 matrix:from-row-list [[ 6 ]]
  (word (list matrix:times-element-wise glob2 glob2 glob2)) => "[{{matrix:  [ [ 36 ] ]}} {{matrix:  [ [ 6 ] ]}}]"

Matrix_map
  extensions [matrix]
  globals [glob1 glob2]
  O> set glob1 matrix:from-row-list [[0 1 2 3 4] [5 6 7 8 9]]
  (word matrix:map ([x -> x ^ 2]) glob1) => "{{matrix:  [ [ 0 1 4 9 16 ][ 25 36 49 64 81 ] ]}}"
  O> set glob2 matrix:from-row-list [[9 8 7 6 5] [4 3 2 1 0]]
  (word (matrix:map ([[x y] -> x + y]) glob1  glob2)) => "{{matrix:  [ [ 9 9 9 9 9 ][ 9 9 9 9 9 ] ]}}"
  O> set glob2 matrix:from-row-list [[9 8 7 6] [4 3 2 1]]
  (word (matrix:map ([[x y]   -> x + y]) glob1  glob2)) => ERROR Extension exception: All matrices must have the same dimensions: the first was 2x5 and another was 2x4.
  (word (matrix:map ([[x y z] -> x + y]) glob1  glob2)) => ERROR Extension exception: Task expected 3 matrix inputs but only got 2.

Matrix_regress
  extensions [matrix]
  globals [glob1 glob2]
  O> set glob1 [1 2]
  O> set glob2 n-values length glob1 [x -> x]
  # The test below does not produce the exact same floating point math results as desktop, so we use a particular precision
  to-report nearly [pair] report (list (map [x -> precision x 13] (item 0 pair)) (item 1 pair)) end
  nearly matrix:regress matrix:from-column-list (list glob1 glob2) => [[1 1] [1 0.5 0]]

# The test below does not produce the exact same floating point math results as desktop. This is because the library vectorious uses Float32Array instead of Array, which only have 7 significant digits.

Matrix_regress(with floating point rounding)
  extensions [matrix]
  globals [glob1 glob2]
  O> set glob1 [20 25 28 32 35 39]
  O> set glob2 n-values length glob1 [x -> x]
  to-report nearly [pair] report (list (map [x -> precision x 13] (item 0 pair)) (item 1 pair)) end
  nearly matrix:regress matrix:from-column-list (list glob1 glob2) => [[20.619 3.686] [0.995 238.833 1.105]]

Matrix_forecast-growth
  extensions [matrix]
  globals [glob1 glob2]
  matrix:forecast-linear-growth [1 2] => [3 1 1 1]
  matrix:forecast-compound-growth [20 25 28 32 35 39] => [45.604 21.158 1.137 0.976]
  matrix:forecast-continuous-growth [20 25 28 32 35 39] => [45.604 21.158 0.128 0.976]
  matrix:forecast-linear-growth [20 25 28 32 35 39] => [42.735 20.619 3.686 0.995]
  matrix:forecast-compound-growth [20 25 28 32 35 39] => [45.604 21.158 1.137 0.976]
  matrix:forecast-continuous-growth [20 25 28 32 35 39] => [45.604 21.158 0.128 0.976]
